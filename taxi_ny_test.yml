sources:
  - name: final_project2
    tables:
      - name: taxi_journeys
        config:
            re_data_monitored: true
        tests:
          - dbt_expectations.expect_table_columns_to_contain_set:
              column_list: ["id", "pickup_datetime", "dropoff_datetime", "passenger_count", 
              "pickup_longitude","pickup_latitude",
              "dropoff_longitude", "dropoff_latitude","trip_duration"]
              transform: lower         
        columns: 
        - name: id
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_unique
          - dbt_expectations.expect_column_values_to_not_be_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "(?i)^(?=.*[id0-9{9-20}]"  # (?i) makes it insensitive
        - name: pickup_datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_not_be_null
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: day
              interval: 1
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, "{{ dbt_expectations.type_datetime() }}"]
        - name: dropoff_datetime
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_not_be_null
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: day
              interval: 1
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, "{{ dbt_expectations.type_datetime() }}"]
          - dbt_expectations.expect_column_values_to_be_greater_than:
               pickup_datetime
        -name: passenger_count
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_not_be_null
          - dbt_expectations.expect_column_values_to_be_between:
                min_value: 1 #almeno un passegero  
        - name: pickup_longitude
        tests:
           - dbt_expectations.expect_column_to_exist
           - dbt_expectations.expect_column_values_to_not_be_null
           - dbt_expectations.expect_column_values_to_be_between:
                min_value: -76  
                max_value: -70
       - name: pickup_latitude
        tests:
           - dbt_expectations.expect_column_to_exist
           - dbt_expectations.expect_column_values_to_not_be_null
           - dbt_expectations.expect_column_values_to_be_between:
                min_value: 31 
                max_value: 37
        - name: dropoff_longitude
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: -76  
                max_value: -70
        - name:  dropoff_latitude
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: 31 
                max_value: 37 
        - name: trip_duration  #espreeso in secondi
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
            - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 86400  
            - dbt_expectations.equal_expression:
                expression: minutes_diff * 60 + DATE_PART('minute', dropoff_datetime-pickup_datetime)=trip_duration
        - name: trip_distance
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
            - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
        - name: street
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
        - name: suburb
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
        - name: city
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
            - dbt.expectations.expect_column_values_to_be_in_set:
                value_set: ['New York']
        - name: state
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_not_be_null
            - dbt.expectations.expect_column_values_to_be_in_set:
                value_set: ['New York', 'New Jersey']
     
            